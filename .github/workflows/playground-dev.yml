name: Build and deploy playground image to dev

on:
  push:
    paths:
      - 'packages/hypertest-playground/**'
  repository_dispatch:
    types: [base-image-built]
  workflow_dispatch:

jobs:
  check-changes:
    name: Check for playground changes
    runs-on: ubuntu-latest
    outputs:
      playground-changed: ${{ steps.changes.outputs.playground }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.sha || github.sha }}
          fetch-depth: 0

      - name: Check for changes
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            # When triggered by runner workflow, always run (skip change checks)
            echo "playground=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "push" ]; then
            # When triggered by push to playground paths, always run
            echo "playground=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # For manual dispatch, check if playground has changes in recent commits
            if git diff --name-only HEAD~5 HEAD | grep -q "^packages/hypertest-playground/"; then
              echo "playground=true" >> $GITHUB_OUTPUT
            else
              echo "playground=false" >> $GITHUB_OUTPUT
            fi
          fi

  playground-image:
    name: Build and deploy playground image to dev
    needs: check-changes
    if: needs.check-changes.outputs.playground-changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.sha || github.sha }}

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Link core binary
        run: npm link -w packages/hypertest-core

      - name: Deploy
        id: deploy
        working-directory: packages/hypertest-playground
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: npx hypertest deploy
